def mean(numbers):
    if not numbers:
        raise ValueError("The list is empty.")
    return sum(numbers) / len(numbers)

def median(numbers):
    if not numbers:
        raise ValueError("The list is empty.")
    sorted_numbers = sorted(numbers)
    n = len(sorted_numbers)
    mid = n // 2
    if n % 2 == 0:
        return (sorted_numbers[mid - 1] + sorted_numbers[mid]) / 2
    else:
        return sorted_numbers[mid]

def mode(numbers):
    if not numbers:
        raise ValueError("The list is empty.")
    from collections import Counter
    counts = Counter(numbers)
    max_frequency = max(counts.values())
    modes = [key for key, value in counts.items() if value == max_frequency]
    return min(modes)

if __name__ == "__main__":
    data = [1, 2, 2, 3, 4]
    print("Mean:", mean(data))
    print("Median:", median(data))
    print("Mode:", mode(data))
